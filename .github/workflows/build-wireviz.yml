name: Build and Commit Wireviz Output

on:
  pull_request:
    paths:
      - 'lampe-wireviz.yml'
  workflow_dispatch:

jobs:
  build-wireviz:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout PR branch
        uses: actions/checkout@v4
        with:
          persist-credentials: true

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install Wireviz
        run: pip install wireviz

      - name: Install Graphviz
        run: sudo apt-get update && sudo apt-get install -y graphviz

      - name: Generate output files with Wireviz
        run: wireviz lampe-wireviz.yml

      - name: Install GitHub CLI
        run: sudo apt-get install -y gh

      - name: Commit, push, and optionally create PR if changes exist
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add .
          if git diff --cached --quiet; then
            echo "No changes detected, skipping."
            exit 0
          fi

          if [ "$GITHUB_EVENT_NAME" = "pull_request" ] && [ -n "$GITHUB_HEAD_REF" ]; then
            echo "Detected PR context. Committing and pushing to PR branch."
            git commit -m "Auto-generate Wireviz output files"
            git pull --rebase origin $GITHUB_HEAD_REF || true
            git push origin HEAD:$GITHUB_HEAD_REF
          # Get the default branch name from the event payload
          DEFAULT_BRANCH=$(jq -r .repository.default_branch "$GITHUB_EVENT_PATH")
          elif [ "$GITHUB_REF" = "refs/heads/$DEFAULT_BRANCH" ]; then
            echo "Detected default branch context ($DEFAULT_BRANCH). Creating PR."
            BRANCH_NAME="wireviz-output/update-$(date +%s)"
            git checkout -b $BRANCH_NAME
            git commit -m "Auto-generate Wireviz output files"
            git push origin $BRANCH_NAME
            gh pr create --title "Auto-generate Wireviz output files" \
              --body "This PR contains auto-generated Wireviz output files." \
              --base "$DEFAULT_BRANCH" --head "$BRANCH_NAME"
          else
            echo "Not a PR or default branch context. Skipping push/PR."
          fi

      - name: Run unit tests
        run: |
          pip install pytest
          pytest tests/unit

      - name: Run E2E tests (placeholder)
        run: echo "Replace this with your E2E test command (e.g., npx cypress run, npx playwright test, etc.)"